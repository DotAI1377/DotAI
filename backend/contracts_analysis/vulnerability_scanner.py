def scan_for_vulnerabilities(contract_code):
    """
    Scans a smart contract's code for known vulnerabilities.

    Args:
        contract_code (str): The source code of the smart contract.

    Returns:
        dict: A dictionary containing identified vulnerabilities and their descriptions.
    """
    vulnerabilities = []

    # Example checks
    if "selfdestruct" in contract_code:
        vulnerabilities.append({
            "issue": "Use of selfdestruct",
            "description": "The selfdestruct function can be exploited to drain contract funds."
        })

    if "tx.origin" in contract_code:
        vulnerabilities.append({
            "issue": "Use of tx.origin",
            "description": "Using tx.origin for authentication can lead to phishing attacks."
        })

    if "delegatecall" in contract_code:
        vulnerabilities.append({
            "issue": "Use of delegatecall",
            "description": "Improper use of delegatecall can lead to code execution vulnerabilities."
        })

    return {
        "vulnerabilities_found": len(vulnerabilities),
        "details": vulnerabilities
    }
